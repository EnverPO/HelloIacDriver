// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 9000000 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int clp_interapp_receive_9000000 = 9000000;
	/// <summary>PID: 9000000 | Type: read</summary>
	public const int clp_interapp_receive = 9000000;
	/// <summary>PID: 9000001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int clp_interapp_return_9000001 = 9000001;
	/// <summary>PID: 9000001 | Type: read</summary>
	public const int clp_interapp_return = 9000001;
	public class Write
	{
	}
	public class Creditcards
	{
		/// <summary>PID: 1000</summary>
		public const int tablePid = 1000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1001</summary>
		public const int indexColumnPid = 1001;
		public class Pid
		{
			/// <summary>PID: 1001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cardnumber_1001 = 1001;
			/// <summary>PID: 1001 | Type: read</summary>
			public const int cardnumber = 1001;
			/// <summary>PID: 1002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cardholder_1002 = 1002;
			/// <summary>PID: 1002 | Type: read</summary>
			public const int cardholder = 1002;
			/// <summary>PID: 1003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cardexpirationdate_1003 = 1003;
			/// <summary>PID: 1003 | Type: read</summary>
			public const int cardexpirationdate = 1003;
			/// <summary>PID: 1004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mothermaidenname_1004 = 1004;
			/// <summary>PID: 1004 | Type: read</summary>
			public const int mothermaidenname = 1004;
			/// <summary>PID: 1005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int messagetimesent_1005 = 1005;
			/// <summary>PID: 1005 | Type: read</summary>
			public const int messagetimesent = 1005;
			/// <summary>PID: 1006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int messagetimereceived_1006 = 1006;
			/// <summary>PID: 1006 | Type: read</summary>
			public const int messagetimereceived = 1006;
			public class Write
			{
				/// <summary>PID: 1007 | Type: write</summary>
				[EditorBrowsable(EditorBrowsableState.Never)]
				public const int carduseraction_1007 = 1007;
				/// <summary>PID: 1007 | Type: write</summary>
				public const int carduseraction = 1007;
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cardnumber_1001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int cardnumber = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cardholder_1002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int cardholder = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cardexpirationdate_1003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int cardexpirationdate = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mothermaidenname_1004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int mothermaidenname = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int messagetimesent_1005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int messagetimesent = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int messagetimereceived_1006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int messagetimereceived = 5;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 1007  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Carduseraction {get { return Protocol.GetParameter(1007); }set { Protocol.SetParameter(1007, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 1000</summary>
	CreditcardsQActionTable creditcards { get; set; }
	object Afterstartup_dummy { get; set; }
	object Cardnumber_1001 { get; set; }
	object Cardnumber { get; set; }
	object Cardholder_1002 { get; set; }
	object Cardholder { get; set; }
	object Cardexpirationdate_1003 { get; set; }
	object Cardexpirationdate { get; set; }
	object Mothermaidenname_1004 { get; set; }
	object Mothermaidenname { get; set; }
	object Messagetimesent_1005 { get; set; }
	object Messagetimesent { get; set; }
	object Messagetimereceived_1006 { get; set; }
	object Messagetimereceived { get; set; }
	object Carduseraction_1007 { get; set; }
	object Carduseraction { get; set; }
	object Clp_interapp_receive_9000000 { get; set; }
	object Clp_interapp_receive { get; set; }
	object Clp_interapp_return_9000001 { get; set; }
	object Clp_interapp_return { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 1000</summary>
	public CreditcardsQActionTable creditcards { get; set; }
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cardnumber_1001 {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	public System.Object Cardnumber {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cardholder_1002 {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	public System.Object Cardholder {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cardexpirationdate_1003 {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	public System.Object Cardexpirationdate {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mothermaidenname_1004 {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	public System.Object Mothermaidenname {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Messagetimesent_1005 {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1005  | Type: read</summary>
	public System.Object Messagetimesent {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1006  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Messagetimereceived_1006 {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 1006  | Type: read</summary>
	public System.Object Messagetimereceived {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 1007  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Carduseraction_1007 {get { return GetParameter(1007); }set { SetParameter(1007, value); }}
	/// <summary>PID: 1007  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Carduseraction {get { return Write.Carduseraction; }set { Write.Carduseraction = value; }}
	/// <summary>PID: 9000000  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Clp_interapp_receive_9000000 {get { return GetParameter(9000000); }set { SetParameter(9000000, value); }}
	/// <summary>PID: 9000000  | Type: read</summary>
	public System.Object Clp_interapp_receive {get { return GetParameter(9000000); }set { SetParameter(9000000, value); }}
	/// <summary>PID: 9000001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Clp_interapp_return_9000001 {get { return GetParameter(9000001); }set { SetParameter(9000001, value); }}
	/// <summary>PID: 9000001  | Type: read</summary>
	public System.Object Clp_interapp_return {get { return GetParameter(9000001); }set { SetParameter(9000001, value); }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		creditcards = new CreditcardsQActionTable(this, 1000, "creditcards");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class CreditcardsQActionTable : QActionTable, IEnumerable<CreditcardsQActionRow>
{
	public CreditcardsQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<CreditcardsQActionRow> GetEnumerator() { return new QActionTableEnumerator<CreditcardsQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class CreditcardsQActionRow : QActionTableRow
{
	/// <summary>PID: 1001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cardnumber_1001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1001 | Type: read</summary>
	public System.Object Cardnumber { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cardholder_1002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	public System.Object Cardholder { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cardexpirationdate_1003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	public System.Object Cardexpirationdate { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mothermaidenname_1004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	public System.Object Mothermaidenname { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Messagetimesent_1005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1005 | Type: read</summary>
	public System.Object Messagetimesent { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Messagetimereceived_1006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1006 | Type: read</summary>
	public System.Object Messagetimereceived { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1007 | Type: write</summary>
	public System.Object Carduseraction_1007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1007 | Type: write</summary>
	public System.Object Carduseraction { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	public CreditcardsQActionRow() : base(0, 7) { }
	public CreditcardsQActionRow(System.Object[] oRow) : base(0, 7, oRow) { }
	public static implicit operator CreditcardsQActionRow(System.Object[] source) { return new CreditcardsQActionRow(source); }
	public static implicit operator System.Object[](CreditcardsQActionRow source) { return source.ToObjectArray(); }
}
}
